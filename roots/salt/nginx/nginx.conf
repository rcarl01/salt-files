user  {{ grains['user'] }} {{ grains['group'] }};
worker_processes  1;

error_log  /var/log/nginx/error.log warn;
pid        /var/run/nginx.pid;
events {
    worker_connections  1024;
}
http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

	open_file_cache max=2000 inactive=1684000s;
	open_file_cache_valid 30s; 
	open_file_cache_min_uses 2;
	open_file_cache_errors on;

	# Sendfile copies data between one FD and other from within the kernel.
	# More efficient than read() + write(), since the requires transferring data to and from the user space.
	sendfile on; 

	# Tcp_nopush causes nginx to attempt to send its HTTP response head in one packet, 
	# instead of using partial frames. This is useful for prepending headers before calling sendfile, 
	# or for throughput optimization.
	tcp_nopush on;

	# don't buffer data-sends (disable Nagle algorithm). Good for sending frequent small bursts of data in real time.
	tcp_nodelay on;

	# Timeout for keep-alive connections. Server will close connections after this time.
	keepalive_timeout 30;

	# Number of requests a client can make over the keep-alive connection. This is set high for testing.
	keepalive_requests 100000;

	# allow the server to close the connection after a client stops responding. Frees up socket-associated memory.
	reset_timedout_connection on;

	# send the client a "request timed out" if the body is not loaded by this time. Default 60.
	client_body_timeout 10;

	# If the client stops reading data, free up the stale client connection after this much time. Default 60.
	send_timeout 2;

	# Compression. Reduces the amount of data that needs to be transferred over the network
	gzip on;
	gzip_comp_level 9;
	gzip_min_length 1000;
	gzip_proxied expired no-cache no-store private auth;
	gzip_types text/plain text/css text/xml text/javascript application/x-javascript application/xml;
	gzip_disable "MSIE [1-6]\.";

    include /etc/nginx/conf.d/*.conf;
}
